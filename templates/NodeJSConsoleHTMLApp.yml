version: '1'
stages:
  git-clone-baserepo:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "ssh://git@gitlab-wd.stackroute.in:2222/hobbes-boilerplates/baserepo-NodeJSConsoleApp.git"
      REPOSITORY_REF: master
      REPOSITORY_REF_TYPE: "branch"
      WORKSPACE: "{{context.WORKSPACE}}/baseRepo"
  git-clone-submission:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "{{payload.submissionRepoUrl}}"
      REPOSITORY_REF: "{{payload.submissionRepoRef}}"
      REPOSITORY_REF_TYPE: "{{payload.submissionRepoReftype}}"
      WORKSPACE: "{{context.WORKSPACE}}/submission"
  git-clone-solution:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "{{payload.solutionRepoUrl}}"
      REPOSITORY_REF: "{{payload.solutionRepoRef}}"
      REPOSITORY_REF_TYPE: "{{payload.solutionRepoReftype}}"
      WORKSPACE: "{{context.WORKSPACE}}/solution"
  git-clone-asttest:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "ssh://git@gitlab-wd.stackroute.in:2222/hobbes-boilerplates/ast-analysis.git"
      REPOSITORY_REF: master
      REPOSITORY_REF_TYPE: "branch"
      WORKSPACE: "{{context.WORKSPACE}}/tools"
    depends_on:
      - git-clone-submission
  build-asttest:
    type: stackroute/javascript/build
    input:
      WORKSPACE: "{{context.WORKSPACE}}/tools"
      ADDITIONAL_PACKAGES_TO_INSTALL: superagent
      YARN_OPTIONS: --silent --no-progress
    output:
      payload:
        output:
          buildAstTest:
            status: \{\{EXITCODE\}\}
            output: \{\{OUTPUT\}\}
            errors: \{\{ERRORS\}\}
            summary: \{\{SUMMARY\}\}
    depends_on:
      - git-clone-asttest
  copy-baserepo-eslint:
    type: stackroute/unix/copy
    input:
      SOURCE: "baseRepo/.eslintrc.js"
      DESTINATION: "submission"
    depends_on:
      - git-clone-baserepo
      - git-clone-submission
  copy-baserepo-htmlhint:
    type: stackroute/unix/copy
    input:
      SOURCE: "baseRepo/.htmlhintrc"
      DESTINATION: "submission"
    depends_on:
      - git-clone-baserepo
      - git-clone-submission
  safecopy-eslint-to-submission:
    type: stackroute/unix/safecopy
    input:
      SOURCE: "solution/.eslintrc.js"
      DESTINATION: "submission"
    depends_on:
      - git-clone-solution
      - git-clone-submission
      - copy-baserepo-eslint
  safecopy-htmlhint-to-submission:
    type: stackroute/unix/safecopy
    input:
      SOURCE: "solution/.htmlhintrc"
      DESTINATION: "submission"
    depends_on:
      - git-clone-solution
      - git-clone-submission
      - copy-baserepo-htmlhint
  copy-commandertests-to-submission:
    type: stackroute/unix/copy
    input:
      SOURCE: "solution/test"
      DESTINATION: "submission/commander"
    depends_on:
      - git-clone-submission
      - git-clone-solution
  copy-commander-ui-tests-to-submission:
    type: stackroute/unix/copy
    input:
      SOURCE: "solution/UI-Test"
      DESTINATION: "submission/commander-UI-Test"
    depends_on:
      - git-clone-submission
      - git-clone-solution
  delete-data-directory:
    type: stackroute/unix/delete
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      FILES: data
    depends_on:
      - git-clone-submission
  delete-output-directory:
    type: stackroute/unix/delete
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      FILES: output
    depends_on:
      - git-clone-submission
  create-output-directory:
    type: stackroute/unix/mkdir
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      FILES: output
    depends_on:
      - delete-output-directory
  link-data-directory:
    type: stackroute/unix/link
    input:
      SOURCE: /data
      DESTINATION: "{{context.WORKSPACE}}/submission"
    depends_on:
      - delete-data-directory
  build-project:
    type: stackroute/javascript/build
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      # TIMEOUT_DURATION_MS: "600000"
      YARN_OPTIONS: --silent --no-progress
    output:
      payload:
        output:
          build:
            status: \{\{EXITCODE\}\}
            output: \{\{OUTPUT\}\}
            errors: \{\{ERRORS\}\}
            summary: \{\{SUMMARY\}\}
    depends_on:
      - git-clone-submission
      - git-clone-solution
      - delete-data-directory
      - create-output-directory
      - delete-data-directory
      - copy-commandertests-to-submission
      - copy-commander-ui-tests-to-submission
  run-project:
    type: stackroute/javascript/start
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
    output:
      payload:
        output:
          run:
            status: \{\{EXITCODE\}\}
            output: \{\{OUTPUT\}\}
            errors: \{\{ERRORS\}\}
            summary: \{\{SUMMARY\}\}
    depends_on:
      - build-project
      - build-asttest
      - link-data-directory
  run-commander-tests:
    type: stackroute/javascript/mocha
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      # TESTPATHS: "commander/**/*.js"
      TESTPATHS: "commander"
    output:
      payload:
        output:
          tests:
            commanderTests:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - run-project
  run-cadet-tests:
    type: stackroute/javascript/mocha
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      # TESTPATHS: "test/**/*.js"
      TESTPATHS: "test"
    output:
      payload:
        output:
          tests:
            cadetTests:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - run-project
  run-commander-ui-tests:
    type: stackroute/phantomjs/phantom
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      TESTPATHS: "commander-UI-Test/index.html"
      MOCHA_PHANTOMJS_OPTIONS: --ssl-protocol=any --ignore-resource-errors --ignore-ssl-errors=true
    output:
      payload:
        output:
          tests:
            commanderUITests:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - run-project
  run-cadet-ui-tests:
    type: stackroute/phantomjs/phantom
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      TESTPATHS: "UI-Test/index.html"
      MOCHA_PHANTOMJS_OPTIONS: --ssl-protocol=any --ignore-resource-errors --ignore-ssl-errors=true
    output:
      payload:
        output:
          tests:
            cadetUITests:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - run-project
  run-eslintrc:
    type: stackroute/javascript/eslint
    input:
      RULES_FILE: ".eslintrc.js"
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      YARN_OPTIONS: --silent --no-progress
      ESLINT_OPTIONS: --quiet
      IGNORE_PATTERN: --ignore-pattern html/**/*.js --ignore-pattern data/**/*.js --ignore-pattern commander-UI-Test/**/*.js --ignore-pattern commander/**/*.js
    output:
      payload:
        output:
          lint:
            eslint:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - safecopy-eslint-to-submission
  run-htmlhintrc:
    type: stackroute/javascript/htmlhint
    input:
      RULES_FILE: ".htmlhintrc"
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      IGNORE_FILES: "**/data/**,**/commander-UI-Test/**,**/commander/**" #Make sure there are no spaces in the ignore file list
    output:
      payload:
        output:
          lint:
            htmlhint:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - safecopy-htmlhint-to-submission
      - build-project
