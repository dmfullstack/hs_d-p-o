version: '1'
stages:
  git-clone-javabaserepo:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "ssh://git@gitlab-wd.stackroute.in:2222/hobbes-boilerplates/baserepo-openJDK8MavenApp.git"
      REPOSITORY_REF: master
      REPOSITORY_REF_TYPE: "branch"
      WORKSPACE: "{{context.WORKSPACE}}/java-baserepo"
  git-clone-angularbaserepo:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "ssh://git@gitlab-wd.stackroute.in:2222/hobbes-boilerplates/baserepo-angularioApp.git"
      REPOSITORY_REF: master
      REPOSITORY_REF_TYPE: "branch"
      WORKSPACE: "{{context.WORKSPACE}}/angular-baserepo"
  git-clone-submission:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "{{payload.submissionRepoUrl}}"
      REPOSITORY_REF: "{{payload.submissionRepoRef}}"
      REPOSITORY_REF_TYPE: "{{payload.submissionRepoReftype}}"
      WORKSPACE: "{{context.WORKSPACE}}/submission"
  git-clone-solution:
    type: stackroute/git/clone
    input:
      REPOSITORY_URL: "{{payload.solutionRepoUrl}}"
      REPOSITORY_REF: "{{payload.solutionRepoRef}}"
      REPOSITORY_REF_TYPE: "{{payload.solutionRepoReftype}}"
      WORKSPACE: "{{context.WORKSPACE}}/solution"
  # delete-data-directory:
  #   type: stackroute/unix/delete
  #   input:
  #     WORKSPACE: "{{context.WORKSPACE}}/submission"
  #     FILES: data
  #   depends_on:
  #     - git-clone-submission
  # link-data-directory:
  #   type: stackroute/unix/link
  #   input:
  #     SOURCE: /data
  #     DESTINATION: "{{context.WORKSPACE}}/submission"
  #   depends_on:
  #     - delete-data-directory
  # delete-output-directory:
  #   type: stackroute/unix/delete
  #   input:
  #     WORKSPACE: "{{context.WORKSPACE}}/submission"
  #     FILES: output
  #   depends_on:
  #     - git-clone-submission
  # create-output-directory:
  #   type: stackroute/unix/mkdir
  #   input:
  #     WORKSPACE: "{{context.WORKSPACE}}/submission"
  #     FILES: output
  #   depends_on:
  #     - delete-output-directory
  copy-baserepo-pmd-rules:
    type: stackroute/unix/copy
    input:
      SOURCE: "java-baserepo/pmdSpringRules.xml"
      DESTINATION: "submission/pmdSpringRules.xml"
    depends_on:
      - git-clone-javabaserepo
      - git-clone-submission
  safecopy-pmd-rules:
    type: stackroute/unix/safecopy
    input:
      SOURCE: "solution/pmdSpringRules.xml"
      DESTINATION: "submission/pmdSpringRules.xml"
    depends_on:
      - git-clone-solution
      - git-clone-submission
      - copy-baserepo-pmd-rules
  copy-baserepo-tslint-to-submission:
    type: stackroute/unix/copy
    input:
      SOURCE: "angular-baserepo/tslint.json"
      DESTINATION: "submission/tslint.json"
    depends_on:
      - git-clone-submission
      - git-clone-angularbaserepo
  safecopy-tslint-to-submission:
    type: stackroute/unix/safecopy
    input:
      SOURCE: "solution/tslint.json"
      DESTINATION: "submission"
    depends_on:
      - git-clone-solution
      - git-clone-submission
      - copy-baserepo-tslint-to-submission
  copy-angularbaserepo-protractor-config-submission:
    type: stackroute/unix/copy
    input:
      SOURCE: "angular-baserepo/protractor-extend.conf.js"
      DESTINATION: "submission/protractor-extend.conf.js"
    depends_on:
      - git-clone-submission
      - git-clone-angularbaserepo
  # copy-commandertests-to-submission:
  #   type: stackroute/unix/findandcopy
  #   input:
  #     WORKSPACE: "{{context.WORKSPACE}}"
  #     SOURCE_ROOT_DIRECTORY: "{{context.WORKSPACE}}/solution"
  #     DIRECTORY_NAME_TO_COPY: "commander"
  #     TARGET_ROOT_DIRECTORY: "{{context.WORKSPACE}}/submission"
  #   depends_on:
  #     - run-pmd
  copy-commander-e2e-config-to-submission:
    # Copy commander's protractor config file to submission
    type: stackroute/unix/copy
    input:
      SOURCE: "solution/protractor.conf.js"
      DESTINATION: "submission/protractor.commander.conf.js"
    depends_on:
      - git-clone-submission
      - git-clone-solution
  copy-commander-e2e-tests-to-submission:
    type: stackroute/unix/copy
    input:
      SOURCE: "solution/e2e"
      DESTINATION: "submission/e2eCommander"
    depends_on:
      - git-clone-submission
      - git-clone-solution
  install-packages:
    type: stackroute/angulario/installdep
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      # TIMEOUT_DURATION_MS: "600000"
      NPM_OPTIONS: -s
      ADDITIONAL_PACKAGES_TO_INSTALL: karma-junit-reporter jasmine-reporters
    output:
      payload:
        output:
          stage::build:
            install-packages:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - git-clone-submission
  build-angular-project:
    type: stackroute/angulario/build
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      TIMEOUT_DURATION_MS: "300000"
      NPM_SCRIPT_OPTIONS: --progress false
    output:
      payload:
        output:
          stage::build:
            UIAppbuild:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - install-packages
  build-java-project:
    type: stackroute/openjdk8maven/build
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      TIMEOUT_DURATION_MS: "600000"
      # BUILD_OPTIONS: -q -B -DskipTests=true
      BUILD_OPTIONS: -DskipTests=true
    output:
      payload:
        output:
          stage::build:
            javabuild:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - git-clone-submission
      # - copy-commandertests-to-submission
  run-pmd:
    type: stackroute/openjdk8maven/pmd
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      RULES_FILE: "pmdSpringRules.xml"
      REPORT_OUTPUT_FILE: "pmdResult.xml"
      PMD_HOME: "/pmd"
      # scan code from root folder before executing any command level evaluations
      BASE_PATH: "{{context.WORKSPACE}}/submission/"
    output:
      payload:
        output:
          lint:
            pmd:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - safecopy-pmd-rules
  run-cadet-nge2espring-tests:
    type: stackroute/openjdk8springangularmysqlapp/nge2espring
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      TEST_OUTPUT_FILE_PATTERN: "reports/protractor/cadettests/protractor-e2etest-result.xml"
      REPORT_OUTPUT_DIR: "reports/protractor/cadettests"
      OVERRIDE_PROTRACTOR_CONFIG_FILE: "protractor.conf.js" #This is the config which should be overriden by command
      EXTENDED_PROTRACTOR_CONFIG_FILE: "protractor-extend.conf.js" #This is the config which is actually will be used
      PROTRACTOR_REPORT_PATH: "reports/protractor/cadettests/"
      PROTRACTOR_REPORT_FILE: "protractor-e2etest-result.xml"
      # PROTRACTOR_FILE_SPECS: "./e2e/**/*e2e-spec.ts"
      PROTRACTOR_FILE_SPECS: "./e2e/*.ts"
      IGNORE_FILE_PATTERN: "reports/protractor/commandertests/protractor-commander-e2etest-result.xml"
      NPM_OPTIONS: -s
      NPM_SCRIPT_OPTIONS: --progress false
    output:
      payload:
        output:
          tests:
            # Mapped to Cadet End-To-End tests
            cadete2etests:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - build-angular-project
      - copy-angularbaserepo-protractor-config-submission
  run-commander-nge2espring-tests:
    type: stackroute/openjdk8springangularmysqlapp/nge2espring
    input:
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      TIMEOUT_DURATION_MS: "600000"
      TEST_OUTPUT_FILE_PATTERN: "reports/protractor/commandertests/protractor-commander-e2etest-result.xml"
      REPORT_OUTPUT_DIR: "reports/protractor/commandertests"
      OVERRIDE_PROTRACTOR_CONFIG_FILE: "protractor.commander.conf.js" #This is the config which should be overriden by command
      EXTENDED_PROTRACTOR_CONFIG_FILE: "protractor-extend.conf.js" #This is the config which is actually will be used
      PROTRACTOR_REPORT_PATH: "reports/protractor/commandertests/"
      PROTRACTOR_REPORT_FILE: "protractor-commander-e2etest-result.xml"
      PROTRACTOR_TEST_DIRECTORY: "e2eCommander"
      # PROTRACTOR_FILE_SPECS: "./e2eCommander/**/*e2e-spec.ts"
      # PROTRACTOR_FILE_SPECS: "./e2eCommander/**/*.ts"
      PROTRACTOR_FILE_SPECS: "./e2eCommander/*.ts"
      IGNORE_FILE_PATTERN: "reports/protractor/cadettests/protractor-e2etest-result.xml"
      NPM_OPTIONS: -s
      NPM_SCRIPT_OPTIONS: --progress false
    output:
      payload:
        output:
          tests:
            # Mapped to Cadet End-To-End tests
            commandere2etests:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - build-angular-project
      - build-java-project
      - copy-commander-e2e-tests-to-submission
      - copy-commander-e2e-config-to-submission
  # run-java-commander-tests:
  #   type: stackroute/openjdk8mysql/junit
  #   input:
  #     WORKSPACE: "{{context.WORKSPACE}}/submission"
  #     TEST_OUTPUT_FILE_PATTERN: "**/target/**/TEST*commander*.xml"
  #     IGNORE_FILE_PATTERN: ""
  #   output:
  #     payload:
  #       output:
  #         tests:
  #           commanderTests:
  #             status: \{\{EXITCODE\}\}
  #             output: \{\{OUTPUT\}\}
  #             errors: \{\{ERRORS\}\}
  #             summary: \{\{SUMMARY\}\}
  #   depends_on:
  #     - build-java-project
  #     - copy-commandertests-to-submission
  # run-java-cadet-tests:
  #   type: stackroute/openjdk8mysql/junit
  #   input:
  #     WORKSPACE: "{{context.WORKSPACE}}/submission"
  #     TIMEOUT_DURATION_MS: "600000"
  #     TEST_OUTPUT_FILE_PATTERN: "**/target/**/TEST*.xml"
  #     IGNORE_FILE_PATTERN: "**/target/**/TEST*commander*.xml"
  #   output:
  #     payload:
  #       output:
  #         tests:
  #           cadetTests:
  #             status: \{\{EXITCODE\}\}
  #             output: \{\{OUTPUT\}\}
  #             errors: \{\{ERRORS\}\}
  #             summary: \{\{SUMMARY\}\}
  #   depends_on:
  #     - build-java-project
  run-tslint:
    type: stackroute/angulario/tslint
    input:
      RULES_FILE: "tslint.json"
      WORKSPACE: "{{context.WORKSPACE}}/submission"
      NPM_OPTIONS: -s
      NPM_SCRIPT_CMD: ng
      NPM_SCRIPT_OPTIONS: lint --format json
      # IGNORE_PATTERN: --ignore-pattern html/**/*.js --ignore-pattern data/**/*.js --ignore-pattern commander-UI-Test/**/*.js --ignore-pattern commander/**/*.js
    output:
      payload:
        output:
          lint:
            # Mapped to code quality tests - TS Lint (uses TS Lint for TS files)
            tslint:
              status: \{\{EXITCODE\}\}
              output: \{\{OUTPUT\}\}
              errors: \{\{ERRORS\}\}
              summary: \{\{SUMMARY\}\}
    depends_on:
      - safecopy-tslint-to-submission
      - build-angular-project
